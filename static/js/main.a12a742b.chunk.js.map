{"version":3,"sources":["context/TreeListContext.js","components/TreeListItem.jsx","hooks/useTreeList.js","components/TreeList.jsx","utils/generateMockData.js","App.js","index.js"],"names":["TreeListContext","createContext","TreeListProvider","children","useState","closed","setClosed","Provider","value","TreeListItem","item","useContext","open","setOpen","hasChildren","length","useEffect","className","onClick","p","name","TreeList","items","map","generateMockData","n","m","x","array","i","push","CONTINENTS","gql","App","console","log","useQuery","loading","error","data","continents","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"iQAEaA,EAAkBC,0BAEhB,SAASC,EAAT,GAAuC,IAAZC,EAAW,EAAXA,SACzC,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,OAAO,cAACN,EAAgBO,SAAjB,CAA0BC,MAAO,CAACH,EAAQC,GAA1C,SAAuDH,ICFhD,SAASM,EAAT,GAAiC,IAATC,EAAQ,EAARA,KACtC,ECDOC,qBAAWX,GDClB,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBF,oBAAS,GAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KACMC,EAAcJ,EAAKP,UAAYO,EAAKP,SAASY,OAAS,EAqB5D,OAnBAC,qBAAU,WACLJ,GACHN,GAAU,KAET,CAACM,EAAMN,IAEVU,qBAAU,WACLX,GACHQ,GAAQ,KAEP,CAACR,IAUH,qBAAIY,UAAU,YAAd,UACC,uBAAMA,UAAU,kBAAkBC,QATpC,WACMJ,EAGJD,GAAQ,SAAAM,GAAC,OAAKA,KAFdb,GAAU,IAOV,UACEI,EAAKU,KADP,IACcN,IAAiBF,EAAsB,8CAAf,kDAErCA,GAAQE,GAAe,cAACO,EAAD,CAAUC,MAAOZ,EAAKP,cE/BlC,SAASkB,EAAT,GAA8B,IAAVC,EAAS,EAATA,MAClC,OACC,mCACEA,GAASA,EAAMP,OAAS,GACxB,oBAAIE,UAAU,OAAd,SACEK,EAAMC,KAAI,SAAAb,GAAI,OACd,cAACD,EAAD,CAA8BC,KAAMA,GAAjBA,EAAKU,aCRvB,SAASI,EAAiBC,EAAGC,GAEnC,IAF8C,IAARC,EAAO,uDAAH,EACpCC,EAAQ,GACLC,EAAI,EAAGA,EAAIH,EAAGG,IACtBD,EAAME,KAAK,CAAEV,KAAK,GAAD,OAAKO,EAAL,YAAUE,EAAI,EAAd,WAElB,OAAU,IAANJ,EACIG,EAEAA,EAAML,KAAI,SAAAb,GAEhB,OADAA,EAAKP,SAAWqB,EAAiBC,EAAI,EAAGC,EAAGC,EAAI,GACxCjB,KCHV,IAAMqB,EAAaC,YAAH,+LA+BDC,MAjBf,WACCjB,qBAAU,WACTkB,QAAQC,IAAIX,EAAiB,EAAG,MAC9B,IAEH,MAAiCY,YAASL,GAAlCM,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KACxB,OAAIF,EAAgB,2CAChBC,EAAc,yCAEjB,qBAAKrB,UAAU,MAAf,SACC,cAACf,EAAD,UACC,cAACmB,EAAD,CAAUC,MAAOiB,EAAKC,kB,wBC1BpBC,EAAS,IAAIC,IAAa,CAC/BC,IAAK,sCACLC,MAAO,IAAIC,MAGZC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAACC,EAAA,EAAD,CAAgBR,OAAQA,EAAxB,SACC,cAAC,EAAD,QAGFS,SAASC,eAAe,W","file":"static/js/main.a12a742b.chunk.js","sourcesContent":["import { useState,createContext } from 'react';\r\n\r\nexport const TreeListContext = createContext();\r\n\r\nexport default function TreeListProvider({children}) {\r\n\tconst [closed, setClosed] = useState(true)\r\n\treturn <TreeListContext.Provider value={[closed, setClosed]}>{children}</TreeListContext.Provider>\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { useTreeList } from '../hooks/useTreeList'\r\nimport TreeList from './TreeList'\r\n\r\nexport default function TreeListItem({ item }) {\r\n\tconst [closed, setClosed] = useTreeList()\r\n\tconst [open, setOpen] = useState(false)\r\n\tconst hasChildren = item.children && item.children.length > 0\r\n\r\n\tuseEffect(() => {\r\n\t\tif (open) {\r\n\t\t\tsetClosed(false)\r\n\t\t}\r\n\t}, [open, setClosed])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (closed) {\r\n\t\t\tsetOpen(false)\r\n\t\t}\r\n\t}, [closed])\r\n\r\n\tfunction toggle() {\r\n\t\tif (!hasChildren) {\r\n\t\t\tsetClosed(true)\r\n\t\t} else {\r\n\t\t\tsetOpen(p => !p)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<li className=\"list-item\">\r\n\t\t\t<span className=\"list-item__name\" onClick={toggle}>\r\n\t\t\t\t{item.name} {hasChildren && (!open ? <>&#9660;</> : <>&#9650;</>)}\r\n\t\t\t</span>\r\n\t\t\t{open && hasChildren && <TreeList items={item.children} />}\r\n\t\t</li>\r\n\t)\r\n}\r\n","import { useContext } from 'react';\r\nimport { TreeListContext } from '../context/TreeListContext';\r\n\r\nexport function useTreeList() {\r\n\treturn useContext(TreeListContext);\r\n}\r\n","import TreeListItem from './TreeListItem'\r\n\r\nexport default function TreeList({ items }) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{items && items.length > 0 && (\r\n\t\t\t\t<ul className=\"list\">\r\n\t\t\t\t\t{items.map(item => (\r\n\t\t\t\t\t\t<TreeListItem key={item.name} item={item} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n","export function generateMockData(n, m, x = 1) {\r\n\tconst array = []\r\n\tfor (let i = 0; i < m; i++) {\r\n\t\tarray.push({ name: `${x}.${i + 1} Name` })\r\n\t}\r\n\tif (n === 1) {\r\n\t\treturn array\r\n\t} else {\r\n\t\treturn array.map(item => {\r\n\t\t\titem.children = generateMockData(n - 1, m, x + 1)\r\n\t\t\treturn item\r\n\t\t})\r\n\t}\r\n}\r\n","import './App.css'\nimport { useQuery, gql } from '@apollo/client'\nimport TreeList from './components/TreeList'\nimport TreeListProvider from './context/TreeListContext'\nimport { generateMockData } from './utils/generateMockData'\nimport { useEffect } from 'react'\n\nconst CONTINENTS = gql`\n\tquery {\n\t\tcontinents {\n\t\t\tname\n\t\t\tchildren: countries {\n\t\t\t\tname\n\t\t\t\tchildren: languages {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\nfunction App() {\n\tuseEffect(() => {\n\t\tconsole.log(generateMockData(5, 3))\n\t}, [])\n\n\tconst { loading, error, data } = useQuery(CONTINENTS)\n\tif (loading) return <p>Loading...</p>\n\tif (error) return <p>Error :(</p>\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<TreeListProvider>\n\t\t\t\t<TreeList items={data.continents} />\n\t\t\t</TreeListProvider>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n\turi: 'https://countries.trevorblades.com/',\n\tcache: new InMemoryCache(),\n});\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ApolloProvider client={client}>\n\t\t\t<App />\n\t\t</ApolloProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}